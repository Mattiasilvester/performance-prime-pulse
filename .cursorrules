# Performance Prime - Cursor Rules
# Ultimo aggiornamento: 10 Agosto 2025 - 21:30

## 🎯 **PROGETTO**
Performance Prime è un'applicazione React/TypeScript per la gestione di allenamenti e performance fisiche, integrata con Supabase.

## 🚀 **STATO ATTUALE (10 Agosto 2025 - 21:30)**
- **Completamento**: 90%
- **Integrazione Supabase**: ✅ 100% funzionante
- **Dashboard**: ✅ 100% funzionante
- **Test**: ✅ 7/7 test passati (100% success rate)
- **Sistema Notifiche**: ✅ 100% implementato
- **UI Components**: ✅ 100% funzionanti
- **App Principale**: ✅ 100% attiva (landing vecchia eliminata)

## 🔧 **PROBLEMI RISOLTI OGGI (10 Agosto 2025)**
1. ✅ **useNotifications Provider**: Aggiunto NotificationProvider in main.tsx
2. ✅ **Routing Dashboard**: Corretto da `/app` a `/dashboard`
3. ✅ **Classi CSS**: Sostituite classi generiche con Tailwind standard
4. ✅ **Server Directory**: Comandi eseguiti da `performance-prime-pulse/`
5. ✅ **Variabili Ambiente**: Credenziali test configurate correttamente
6. ✅ **Dashboard Rendering**: Completamente funzionante
7. ✅ **Console Browser**: Pulita da errori e warning
8. ✅ **Header Visibility**: Ora visibile e funzionale
9. ✅ **Pulizia Landing**: Eliminati tutti i file di landing vecchi
10. ✅ **App Principale**: Ripristinata e funzionante al 100%

## 📁 **STRUTTURA PROGETTO AGGIORNATA**
```
performance-prime-pulse/
├── src/
│   ├── main.tsx                    ← NotificationProvider + AuthProvider
│   ├── components/layout/          ← Header, AppLayout, BottomNavigation
│   ├── hooks/                      ← useAuth, useNotifications
│   ├── pages/                      ← Dashboard, Auth, etc.
│   └── integrations/supabase/      ← Client e configurazione
├── .env                            ← Variabili ambiente configurate
├── vite.config.ts                  ← Configurazione Vite (porta 8081)
├── index.html                      ← APP PRINCIPALE (unica entry point)
└── tailwind.config.ts              ← Palette colori definita
```

## 🎨 **DESIGN SYSTEM COMPLETO**
- **Colori**: Palette definita in tailwind.config.ts
- **Componenti**: shadcn/ui + Tailwind CSS
- **Responsive**: Mobile-first design
- **Tema**: Dark mode con accenti oro (pp-gold)
- **UI**: Header, navigazione, dashboard completamente funzionanti
- **Entry Point**: Solo app principale (landing vecchia eliminata)

## 🚨 **ATTENZIONE - PROBLEMI RISOLTI OGGI**
- ~~useNotifications provider mancante~~ ✅ RISOLTO
- ~~Routing dashboard errato~~ ✅ RISOLTO  
- ~~Classi CSS inesistenti~~ ✅ RISOLTO
- ~~Server non avviabile~~ ✅ RISOLTO
- ~~Dashboard non si carica~~ ✅ RISOLTO
- ~~Header non visibile~~ ✅ RISOLTO
- ~~Console browser con errori~~ ✅ RISOLTO
- ~~File landing interferenti~~ ✅ RISOLTO
- ~~App principale non caricata~~ ✅ RISOLTO

## 📋 **REGOLE DI SVILUPPO AGGIORNATE**

### **1. Struttura File**
- Usa sempre la directory `performance-prime-pulse/` per comandi npm
- Mantieni la struttura di cartelle esistente
- Segui le convenzioni TypeScript/React
- **NON creare file landing separati** - usa solo l'app principale

### **2. Styling**
- **NON usare** classi generiche come `bg-surface-primary`, `text-brand-primary`
- **USARE** classi Tailwind standard: `bg-black`, `text-pp-gold`, `text-white`
- Mantieni la palette colori definita in tailwind.config.ts

### **3. Componenti**
- Wrappa sempre l'App con i provider necessari (AuthProvider, NotificationProvider)
- Usa i custom hooks esistenti (useAuth, useNotifications)
- Mantieni la separazione tra logica e UI

### **4. Routing**
- Dashboard: `/dashboard` (NON `/app`)
- Allenamenti: `/workouts`
- Appuntamenti: `/schedule`
- Usa sempre `navigate()` per la navigazione programmatica

### **5. Gestione Stato**
- **Auth**: useAuth hook per autenticazione
- **Notifiche**: useNotifications hook per notifiche
- **Locale**: localStorage per persistenza dati
- **Globale**: React Context per stato condiviso

### **6. Entry Point**
- **UNICA ENTRY POINT**: `index.html` → `src/main.tsx`
- **NON creare** file landing separati
- **MANTIENI** solo l'app principale Performance Prime

## 🔍 **DEBUGGING E TROUBLESHOOTING AGGIORNATO**

### **Se la Dashboard Non Si Carica**
1. ✅ **RISOLTO**: Controlla che NotificationProvider sia in main.tsx
2. ✅ **RISOLTO**: Verifica che AuthProvider sia presente
3. Controlla che il server sia su porta 8081
4. Ricarica la pagina

### **Se il Server Non Si Avvia**
1. ✅ **RISOLTO**: Assicurati di essere in `performance-prime-pulse/`
2. Esegui `npm run dev`
3. Controlla che la porta 8081 sia libera

### **Se le Notifiche Non Funzionano**
1. ✅ **RISOLTO**: Verifica NotificationProvider in main.tsx
2. Controlla console per errori useNotifications
3. Verifica che useAuth sia funzionante

### **Se l'Header Non È Visibile**
1. ✅ **RISOLTO**: Verifica che le classi CSS siano Tailwind standard
2. Controlla che non ci siano classi generiche
3. Verifica che il componente sia renderizzato correttamente

### **Se Si Carica la Landing Vecchia**
1. ✅ **RISOLTO**: Tutti i file landing sono stati eliminati
2. Verifica che `index.html` punti a `src/main.tsx`
3. Controlla che non ci siano redirect o configurazioni landing

## 📚 **DOCUMENTAZIONE AGGIORNATA**
- `DOCUMENTATION_UPDATE_10AGUSTO2025.md` - Documentazione completa aggiornata
- `NOTIFICATION_GLOBAL_STATE_FIX.md` - Fix notifiche
- `INTEGRATION_REPORT.md` - Report integrazione Supabase
- `BUTTON_FIX_IMPLEMENTATION.md` - Fix componenti UI
- `work.md` - Log lavoro dettagliato aggiornato

## 🎯 **PROSSIMI PASSI AGGIORNATI**
1. ✅ **Dashboard**: Completamente funzionante
2. ✅ **App Principale**: Ripristinata e funzionante
3. ✅ **Pulizia Landing**: File vecchi eliminati
4. **Test Utente**: Validazione esperienza utente
5. **Ottimizzazioni**: Performance e rendering
6. **Documentazione**: Guide utente finali
7. **Deploy**: Preparazione per produzione

## ⚠️ **IMPORTANTE - AGGIORNATO**
- ✅ **Provider**: NotificationProvider e AuthProvider sono ora correttamente configurati
- ✅ **CSS**: Tutte le classi sono ora Tailwind standard
- ✅ **Routing**: Dashboard funziona correttamente su `/dashboard`
- ✅ **Console**: Nessun errore critico rimane
- ✅ **Landing**: Tutti i file vecchi eliminati
- ✅ **App Principale**: Unica entry point funzionante
- **MANTIENI** la struttura di autenticazione esistente
- **TESTA** sempre dopo modifiche ai provider o al routing
- **NON creare** file landing separati

## 🔗 **RISORSE UTILI**
- Supabase Dashboard: https://supabase.com/dashboard
- Tailwind CSS: https://tailwindcss.com/docs
- React Router: https://reactrouter.com/
- shadcn/ui: https://ui.shadcn.com/

## 📊 **STATO ATTUALE DETTAGLIATO**
- **Backend**: ✅ 100% Supabase integrato
- **Frontend**: ✅ 100% React/TypeScript funzionante
- **UI**: ✅ 100% Componenti visibili e funzionali
- **Routing**: ✅ 100% Navigazione corretta
- **Notifiche**: ✅ 100% Sistema completo
- **Dashboard**: ✅ 100% Rendering e funzionalità
- **Test**: ✅ 100% 7/7 test passati
- **App Principale**: ✅ 100% Attiva e funzionante
- **Landing**: ✅ 100% Pulita (file vecchi eliminati)

---
*Regole aggiornate il 10 Agosto 2025 - 21:30*
*Stato: Progetto 90% completato, dashboard 100% funzionante, app principale ripristinata*
*Tutti i problemi critici risolti, landing vecchia eliminata* 